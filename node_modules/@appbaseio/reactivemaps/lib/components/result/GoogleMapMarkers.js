'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _types = require('@appbaseio/reactivecore/lib/utils/types');

var _types2 = _interopRequireDefault(_types);

var _GoogleMapMarker = require('./GoogleMapMarker');

var _GoogleMapMarker2 = _interopRequireDefault(_GoogleMapMarker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var GoogleMapMarkers = function GoogleMapMarkers(_ref) {
	var resultsToRender = _ref.resultsToRender,
	    rest = _objectWithoutProperties(_ref, ['resultsToRender']);

	return _react2.default.createElement(
		'div',
		null,
		resultsToRender.map(function (marker) {
			return _react2.default.createElement(
				_react2.default.Fragment,
				{ key: marker._id },
				_react2.default.createElement(_GoogleMapMarker2.default, _extends({}, rest, { marker: marker }))
			);
		})
	);
};

GoogleMapMarkers.propTypes = {
	resultsToRender: _types2.default.hits,
	getPosition: _types2.default.func,
	renderData: _types2.default.func,
	defaultPin: _types2.default.string,
	autoClosePopover: _types2.default.bool,
	handlePreserveCenter: _types2.default.func,
	onPopoverClick: _types2.default.func,
	markerProps: _types2.default.props
};
exports.default = GoogleMapMarkers;